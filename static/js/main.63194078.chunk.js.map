{"version":3,"sources":["components/From.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","value","inputText","onChange","e","console","log","target","setInputText","type","className","onClick","preventDefault","setTodos","todos","text","completed","id","Math","random","setStatus","name","Todo","data","map","item","filter","el","TodoList","filteredTodos","todo","App","useState","status","setFilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA0CgBA,EAvCH,SAACC,GAsBV,OACI,iCACA,uBAAOC,MAASD,EAAME,UAAWC,SAtBZ,SAACC,GAEtBC,QAAQC,IAAIF,EAAEG,OAAON,OACrBD,EAAMQ,aAAaJ,EAAEG,OAAON,QAmBkCQ,KAAK,OAAOC,UAAU,eACpF,wBAASC,QAlBa,SAACP,GAEvBA,EAAEQ,iBACFZ,EAAMa,SAAN,sBACOb,EAAMc,OADb,CACoB,CAACC,KAAMf,EAAME,UAAWc,WAAW,EAAOC,GAAoB,IAAfC,KAAKC,aAExEnB,EAAMQ,aAAa,KAYoBE,UAAU,cAAcD,KAAK,SAApE,SACE,mBAAGC,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQP,SAbQ,SAACC,GACnBC,QAAQC,IAAIF,EAAEG,OAAON,OACrBD,EAAMoB,UAAUhB,EAAEG,OAAON,QAWYoB,KAAK,QAAQX,UAAU,cAA1D,UACE,wBAAQT,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCDGqB,EAhCF,SAACtB,GAqBV,OAEI,sBAAKU,UAAY,OAAjB,UACI,oBAAIA,UAAS,oBAAiBV,EAAMuB,KAAKP,UAAY,YAAc,IAAnE,SAA0EhB,EAAMuB,KAAKR,OACrF,wBAAQJ,QAfQ,WAEpBX,EAAMa,SAASb,EAAMc,MAAMU,KAAI,SAAAC,GAC3B,OAAGA,EAAKR,KAAOjB,EAAMuB,KAAKN,GACtB,2BACOQ,GADP,IACaT,WAAYS,EAAKT,YAG3BS,OAO6Bf,UAAY,gBAAhD,SAAgE,mBAAGA,UAAY,mBAC/E,wBAAQC,QAtBM,WAElBX,EAAMa,SAASb,EAAMc,MAAMY,QAAO,SAACC,GAAD,OAAQA,EAAGV,KAAOjB,EAAMuB,KAAKN,QAoBzBP,UAAY,aAA9C,SAA2D,mBAAGA,UAAY,uBCJvEkB,EAjBE,SAAC5B,GACd,OACI,qBAAKU,UAAU,iBAAf,SACR,qBAAIA,UAAU,YAAd,UAEIV,EAAM6B,cAAcL,KAAI,SAAAM,GAAI,OACxB,cAAC,EAAD,CAAsBhB,MAASd,EAAM6B,cAAeN,KAAQO,EAAMjB,SAAYb,EAAMa,UAAvEiB,EAAKb,OAH1B,UCuCec,MA5Cf,WACE,MAAkCC,mBAAS,IAA3C,mBAAO9B,EAAP,KAAkBM,EAAlB,KACA,EAA0BwB,mBAAS,IAAnC,mBAAOlB,EAAP,KAAcD,EAAd,KACA,EAA4BmB,mBAAS,OAArC,mBAAOC,EAAP,KAAeb,EAAf,KACA,EAAyCY,mBAAS,IAAlD,mBAAMH,EAAN,KAAqBK,EAArB,KA2BA,OANAC,qBAAU,YAhBY,WAEpB,OAAOF,GACL,IAAK,YACHC,EAAiBpB,EAAMY,QAAO,SAAAI,GAAI,OAAuB,IAAnBA,EAAKd,cAC3C,MACF,IAAK,cACHkB,EAAiBpB,EAAMY,QAAO,SAAAI,GAAI,OAAuB,IAAnBA,EAAKd,cAC3C,MACF,QACEkB,EAAiBpB,IAOrBsB,KACC,CAACtB,EAAMmB,IAKR,sBAAKvB,UAAU,MAAf,UACA,iCACE,qDAGA,cAAC,EAAD,CAAMR,UAAcA,EAAWY,MAASA,EAAOD,SAAYA,EAAUL,aAAgBA,EAAcY,UAAWA,IAC9G,cAAC,EAAD,CAAUP,SAAYA,EAAUgB,cAAiBA,QC/BxCQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.63194078.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Form = (props) =>\r\n{\r\n    const inputTextHandler = (e) =>\r\n    {\r\n        console.log(e.target.value);\r\n        props.setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        props.setTodos([\r\n            ...props.todos, {text: props.inputText, completed :false, id : Math.random() *100 }\r\n        ]);\r\n        props.setInputText(\"\");\r\n    };\r\n\r\n    const statusHandler = (e) =>{\r\n        console.log(e.target.value);\r\n        props.setStatus(e.target.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <form>\r\n        <input value = {props.inputText} onChange ={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n        <button  onClick = {submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange = {statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport  default Form;\r\n\r\n","import React from 'react';\r\n\r\nconst Todo = (props) =>{\r\n\r\n\r\n    //events \r\n    const deleteHandler = () =>\r\n    {\r\n        props.setTodos(props.todos.filter((el) => el.id !== props.data.id));\r\n\r\n    };\r\n    \r\n    const completeHandler = () =>\r\n    {\r\n        props.setTodos(props.todos.map(item => {\r\n            if(item.id === props.data.id){\r\n                return{\r\n                    ...item, completed: !item.completed,\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n    };\r\n    return(\r\n        \r\n        <div className = \"todo\">\r\n            <li className = {`todo-item ${props.data.completed ? \"completed\" : \"\"}`}>{props.data.text}</li>\r\n            <button onClick = {completeHandler} className = \" complete-btn\"><i className = \"fas fa-check\"></i></button>\r\n            <button onClick = {deleteHandler} className = \" trash-btn\"><i className = \"fas fa-trash\"></i></button>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Todo;\r\n    \r\n\r\n","import React from 'react';\r\nimport Todo from '../components/Todo';\r\n\r\n\r\n\r\n\r\n\r\nconst TodoList = (props) =>{\r\n    return(\r\n        <div className=\"todo-container\">\r\n<ul className=\"todo-list\">\r\n{\r\n    props.filteredTodos.map(todo =>(\r\n        <Todo key = {todo.id} todos = {props.filteredTodos} data = {todo} setTodos = {props.setTodos}/>\r\n    ))\r\n};\r\n</ul>\r\n\r\n</div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default TodoList;\r\n\r\n\r\n","import React, {useState,useEffect} from 'react';\nimport './App.css';\nimport Form from '../src/components/From';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const[filteredTodos, setFilteredTodos] = useState([]);\n\n\n\n\n  const filterHandler = () =>\n  {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n  }\n\n  }\n\n  useEffect(() => {\n    filterHandler();\n  }, [todos,status]);\n  \n\n\n  return (\n    <div className=\"App\">\n    <header>\n      <h1>Bibek's TODO list</h1>\n      \n      </header>\n      <Form inputText =  {inputText} todos = {todos} setTodos = {setTodos} setInputText = {setInputText} setStatus={setStatus}/>\n      <TodoList setTodos = {setTodos} filteredTodos = {filteredTodos} />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}